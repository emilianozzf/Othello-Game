1. Test Tile Class constructor:
    Valid Input:
        tile = Tile(1, 2, 1)

    Expected Output:
        tile.column == 1
        tile.row == 2
        tile.color == 1

    I'm confident that I've verified every possible eventually.

2. Test Tiles Class constructor:
    Valid Input:
        tiles = Tiles(400, 400)

    Expected Output:
        tiles.WIDTH == 400
        tiles.HEIGHT == 400
        tiles.SPACING == 100
        tiles.ROWS == 4
        tiles.COLS == 4
        len(tiles.tiles) == 4
        len(tiles.tiles[0]) == 4
        tiles.tiles[0][0] is None
        tiles.tiles[1][1].color == 1
        tiles.tiles[2][2].color == 1
        tiles.tiles[1][2].color == 0
        tiles.tiles[2][1].color == 0
        tiles.tile_counts["black"] == 2
        tiles.tile_counts["white"] == 2

    I'm confident that I've verified every possible eventually.

3. Test Tiles Class put_tile method:
    Valid Input:
        tiles = Tiles(400, 400)
        tiles.put_tile(0, 0, 1)
        tiles.put_tile(350, 350, 0)

    Expected Output:
        tiles.tiles[0][0].color == 1
        tiles.tiles[3][3].color == 0
        tiles.tile_counts["black"] == 3
        tiles.tile_counts["white"] == 3

    I'm confident that I've verified every possible eventually.

4. Test GameController Class constructor:
    Valid Input:
    gc = GameController(400, 400)

    Expected Output:
        gc.WIDTH == 400
        gc.HEIGHT == 400
        gc.player1_turn == True
        gc.players_tie == False
        gc.player1_score == 2
        gc.player2_score == 2

    I'm confident that I've verified every possible eventually.

5. Test Board Class constructor:
    Valid Input:
        gc = GameController(400, 400)
        board = Board(400, 400, gc)

    Expected Output:
        board.WIDTH == 400
        board.HEIGHT == 400
        self.SPACING == 100
        self.ROWS == 4
        self.COLS == 4

    I'm confident that I've verified every possible eventually.

6. Test Board Class put_tile method:
    Valid Input:
        gc = GameController(400, 400)
        board = Board(400, 400, gc)
        board.put_tile(0, 0, 1)
        board.put_tile(100, 100, 0)
        board.put_tile(100, 200, 1)

    Expected Output:
        board.tiles.tiles[0][0].color == 1
        board.tiles.tiles[1][1].color == 1
        board.tiles.tiles[1][2].color == 0
        board.tiles.tile_counts["black"] == 2
        board.tiles.tile_counts["white"] == 3
        gc.player1_score == False

    I'm confident that I've verified every possible eventually.

7. Test Player1 Class move method:
    Valid Input:
        gc = GameController(400, 400)
        board = Board(400, 400, gc)
        player1 = Player2(board, gc)
        player1.move(0, 0)
        player1.move(100, 100)
        player1.move(100, 200)

    Expected Output:
        player1.board.tiles.tiles[0][0].color = 0
        player1.board.tiles.tiles[1][1].color = 1
        player1.board.tiles.tiles[1][2].color = 0
        player1.board.tiles.tile_counts["black"] == 3
        player1.board.tiles.tile_counts["white"] == 2
        gc.player1_score == False

    I'm confident that I've verified every possible eventually.

8. Test Player2 Class move method:
    Valid Input:
        gc = GameController(400, 400)
        board = Board(400, 400, gc)
        player2 = Player2(board, gc)
        player2.move(0, 0)
        player2.move(100, 100)
        player2.move(100, 200)

    Expected Output:
        player2.board.tiles.tiles[0][0].color = 1
        player2.board.tiles.tiles[1][1].color = 1
        player2.board.tiles.tiles[1][2].color = 0
        player2.board.tiles.tile_counts["black"] == 2
        player2.board.tiles.tile_counts["white"] == 3
        gc.player1_score == True

    I'm confident that I've verified every possible eventually.
